# Generated by Django 4.2.9 on 2025-01-27 10:33

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("ai_service", "0001_initial"),
        ("news", "0001_initial"),
    ]

    operations = [
        migrations.AddField(
            model_name="notificationsubscription",
            name="user",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="notification_subscription",
                to=settings.AUTH_USER_MODEL,
                verbose_name="用户",
            ),
        ),
        migrations.AddField(
            model_name="notification",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="notifications",
                to=settings.AUTH_USER_MODEL,
                verbose_name="用户",
            ),
        ),
        migrations.AddField(
            model_name="batchanalysistask",
            name="created_by",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="created_batch_tasks",
                to=settings.AUTH_USER_MODEL,
                verbose_name="创建者",
            ),
        ),
        migrations.AddField(
            model_name="batchanalysistask",
            name="rule",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="batch_tasks",
                to="ai_service.analysisrule",
                verbose_name="分析规则",
            ),
        ),
        migrations.AddField(
            model_name="batchanalysisresult",
            name="task",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="results",
                to="ai_service.batchanalysistask",
                verbose_name="所属任务",
            ),
        ),
        migrations.AddField(
            model_name="analysisvisualization",
            name="created_by",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="visualizations",
                to=settings.AUTH_USER_MODEL,
                verbose_name="创建者",
            ),
        ),
        migrations.AddField(
            model_name="analysisschedule",
            name="created_by",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="analysis_schedules",
                to=settings.AUTH_USER_MODEL,
                verbose_name="创建者",
            ),
        ),
        migrations.AddField(
            model_name="analysisschedule",
            name="rules",
            field=models.ManyToManyField(
                blank=True, related_name="schedules", to="ai_service.analysisrule", verbose_name="分析规则"
            ),
        ),
        migrations.AddField(
            model_name="analysisrule",
            name="created_by",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="created_rules",
                to=settings.AUTH_USER_MODEL,
                verbose_name="创建者",
            ),
        ),
        migrations.AddField(
            model_name="analysisresult",
            name="created_by",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="created_analysis_results",
                to=settings.AUTH_USER_MODEL,
                verbose_name="创建者",
            ),
        ),
        migrations.AddField(
            model_name="analysisresult",
            name="news",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="analysis_results",
                to="news.newsarticle",
                verbose_name="关联新闻",
            ),
        ),
        migrations.AddField(
            model_name="analysisnotification",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="analysis_notifications",
                to=settings.AUTH_USER_MODEL,
                verbose_name="接收用户",
            ),
        ),
        migrations.AddIndex(
            model_name="analysiscache",
            index=models.Index(fields=["cache_key"], name="ai_service__cache_k_91e588_idx"),
        ),
        migrations.AddIndex(
            model_name="analysiscache",
            index=models.Index(fields=["expires_at"], name="ai_service__expires_88076e_idx"),
        ),
        migrations.AddIndex(
            model_name="notification",
            index=models.Index(fields=["user", "is_read"], name="ai_service__user_id_1ed347_idx"),
        ),
        migrations.AddIndex(
            model_name="notification",
            index=models.Index(fields=["notification_type"], name="ai_service__notific_fcacdf_idx"),
        ),
        migrations.AddIndex(
            model_name="notification",
            index=models.Index(fields=["created_at"], name="ai_service__created_fc55c9_idx"),
        ),
        migrations.AddIndex(
            model_name="batchanalysistask",
            index=models.Index(fields=["status"], name="ai_service__status_118356_idx"),
        ),
        migrations.AddIndex(
            model_name="batchanalysistask",
            index=models.Index(fields=["created_at"], name="ai_service__created_2cb155_idx"),
        ),
        migrations.AddIndex(
            model_name="batchanalysistask",
            index=models.Index(fields=["rule"], name="ai_service__rule_id_54fee8_idx"),
        ),
        migrations.AddIndex(
            model_name="analysisvisualization",
            index=models.Index(fields=["data_type", "is_active"], name="ai_service__data_ty_2d1156_idx"),
        ),
        migrations.AddIndex(
            model_name="analysisvisualization",
            index=models.Index(fields=["created_at"], name="ai_service__created_c7a96f_idx"),
        ),
        migrations.AddIndex(
            model_name="analysisrule",
            index=models.Index(fields=["rule_type", "is_active"], name="ai_service__rule_ty_18f374_idx"),
        ),
        migrations.AddIndex(
            model_name="analysisrule",
            index=models.Index(fields=["created_at"], name="ai_service__created_f7c809_idx"),
        ),
        migrations.AddIndex(
            model_name="analysisresult",
            index=models.Index(fields=["news", "analysis_type"], name="ai_service__news_id_b01f96_idx"),
        ),
        migrations.AddIndex(
            model_name="analysisresult",
            index=models.Index(fields=["created_at"], name="ai_service__created_bbbcd2_idx"),
        ),
        migrations.AlterUniqueTogether(
            name="analysisresult",
            unique_together={("news", "analysis_type")},
        ),
        migrations.AddIndex(
            model_name="analysisnotification",
            index=models.Index(fields=["user", "-created_at"], name="ai_service__user_id_864a59_idx"),
        ),
        migrations.AddIndex(
            model_name="analysisnotification",
            index=models.Index(fields=["notification_type"], name="ai_service__notific_9aa930_idx"),
        ),
    ]
