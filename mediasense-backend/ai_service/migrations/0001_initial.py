# Generated by Django 5.1.5 on 2025-01-30 04:52

import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="AnalysisNotification",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "notification_type",
                    models.CharField(
                        choices=[
                            ("analysis_complete", "分析完成"),
                            ("analysis_error", "分析错误"),
                            ("batch_complete", "批量分析完成"),
                            ("schedule_complete", "调度执行完成"),
                        ],
                        max_length=20,
                        verbose_name="通知类型",
                    ),
                ),
                ("title", models.CharField(max_length=200, verbose_name="通知标题")),
                ("content", models.TextField(verbose_name="通知内容")),
                ("data", models.JSONField(default=dict, verbose_name="相关数据")),
                ("is_read", models.BooleanField(default=False, verbose_name="是否已读")),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="创建时间")),
            ],
            options={
                "verbose_name": "分析通知",
                "verbose_name_plural": "分析通知",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="AnalysisResult",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "analysis_type",
                    models.CharField(
                        choices=[("sentiment", "情感分析"), ("keywords", "关键词提取"), ("summary", "摘要生成")],
                        max_length=20,
                        verbose_name="分析类型",
                    ),
                ),
                ("result", models.JSONField(verbose_name="分析结果")),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now, verbose_name="创建时间")),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="更新时间")),
                ("is_valid", models.BooleanField(default=True, verbose_name="是否有效")),
                ("error_message", models.TextField(blank=True, verbose_name="错误信息")),
            ],
            options={
                "verbose_name": "分析结果",
                "verbose_name_plural": "分析结果",
            },
        ),
        migrations.CreateModel(
            name="AnalysisRule",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=100, verbose_name="规则名称")),
                (
                    "rule_type",
                    models.CharField(
                        choices=[("sentiment", "情感分析"), ("keywords", "关键词提取"), ("summary", "摘要生成")],
                        max_length=20,
                        verbose_name="规则类型",
                    ),
                ),
                ("system_prompt", models.TextField(help_text="用于指导AI模型的系统提示词", verbose_name="系统提示词")),
                (
                    "user_prompt_template",
                    models.TextField(
                        help_text="用于生成用户提示词的模板，可使用{title}和{content}作为占位符",
                        verbose_name="用户提示词模板",
                    ),
                ),
                (
                    "parameters",
                    models.JSONField(
                        default=dict, help_text="如temperature、max_tokens等参数", verbose_name="分析参数"
                    ),
                ),
                ("is_active", models.IntegerField(default=1, verbose_name="是否启用")),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now, verbose_name="创建时间")),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="更新时间")),
                ("description", models.TextField(blank=True, verbose_name="规则描述")),
            ],
            options={
                "verbose_name": "分析规则",
                "verbose_name_plural": "分析规则",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="AnalysisSchedule",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=100, verbose_name="调度名称")),
                (
                    "schedule_type",
                    models.CharField(
                        choices=[("interval", "间隔执行"), ("cron", "定时执行")],
                        default="interval",
                        max_length=20,
                        verbose_name="调度类型",
                    ),
                ),
                (
                    "interval_minutes",
                    models.IntegerField(
                        blank=True, help_text="仅在间隔执行时使用", null=True, verbose_name="执行间隔(分钟)"
                    ),
                ),
                (
                    "cron_expression",
                    models.CharField(
                        blank=True, help_text="仅在定时执行时使用", max_length=100, null=True, verbose_name="Cron表达式"
                    ),
                ),
                ("analysis_types", models.JSONField(help_text="要执行的分析类型列表", verbose_name="分析类型列表")),
                (
                    "categories",
                    models.JSONField(
                        blank=True,
                        help_text="要分析的新闻分类ID列表，为空则分析所有分类",
                        null=True,
                        verbose_name="新闻分类",
                    ),
                ),
                (
                    "time_window",
                    models.IntegerField(help_text="只分析最近n分钟内的新闻", verbose_name="时间窗口(分钟)"),
                ),
                ("is_active", models.IntegerField(default=1, verbose_name="是否启用")),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="创建时间")),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="更新时间")),
                ("last_run", models.DateTimeField(blank=True, null=True, verbose_name="上次执行时间")),
                ("next_run", models.DateTimeField(blank=True, null=True, verbose_name="下次执行时间")),
            ],
            options={
                "verbose_name": "分析任务调度",
                "verbose_name_plural": "分析任务调度",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="AnalysisVisualization",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=100, verbose_name="图表名称")),
                ("description", models.TextField(blank=True, verbose_name="图表描述")),
                (
                    "chart_type",
                    models.CharField(
                        choices=[("line", "折线图"), ("bar", "柱状图"), ("pie", "饼图"), ("radar", "雷达图")],
                        default="line",
                        max_length=20,
                        verbose_name="图表类型",
                    ),
                ),
                (
                    "data_type",
                    models.CharField(
                        choices=[("sentiment", "情感分析"), ("keywords", "关键词提取"), ("summary", "摘要生成")],
                        max_length=20,
                        verbose_name="数据类型",
                    ),
                ),
                (
                    "time_range",
                    models.IntegerField(default=7, help_text="统计最近n天的数据", verbose_name="时间范围(天)"),
                ),
                (
                    "categories",
                    models.JSONField(
                        blank=True,
                        help_text="要统计的新闻分类ID列表，为空则统计所有分类",
                        null=True,
                        verbose_name="新闻分类",
                    ),
                ),
                (
                    "aggregation_field",
                    models.CharField(help_text="要统计的字段名称", max_length=50, verbose_name="聚合字段"),
                ),
                (
                    "aggregation_method",
                    models.CharField(
                        choices=[
                            ("count", "计数"),
                            ("avg", "平均值"),
                            ("sum", "求和"),
                            ("max", "最大值"),
                            ("min", "最小值"),
                        ],
                        default="count",
                        max_length=20,
                        verbose_name="聚合方法",
                    ),
                ),
                ("group_by", models.CharField(help_text="按此字段分组统计", max_length=50, verbose_name="分组字段")),
                ("filters", models.JSONField(default=dict, help_text="JSON格式的过滤条件", verbose_name="过滤条件")),
                ("is_active", models.IntegerField(default=1, verbose_name="是否启用")),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now, verbose_name="创建时间")),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="更新时间")),
                ("last_generated", models.DateTimeField(blank=True, null=True, verbose_name="上次生成时间")),
                (
                    "cached_data",
                    models.JSONField(blank=True, help_text="缓存的图表数据", null=True, verbose_name="缓存数据"),
                ),
            ],
            options={
                "verbose_name": "分析可视化",
                "verbose_name_plural": "分析可视化",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="BatchAnalysisResult",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("news_id", models.IntegerField(verbose_name="新闻ID")),
                ("results", models.JSONField(verbose_name="分析结果")),
                ("is_success", models.BooleanField(default=True, verbose_name="是否成功")),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="创建时间")),
            ],
            options={
                "verbose_name": "批量分析结果",
                "verbose_name_plural": "批量分析结果",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="BatchAnalysisTask",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(default="批量分析任务", max_length=100, verbose_name="任务名称")),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "等待中"),
                            ("processing", "处理中"),
                            ("completed", "已完成"),
                            ("failed", "失败"),
                            ("cancelled", "已取消"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="任务状态",
                    ),
                ),
                ("total_count", models.IntegerField(default=0, verbose_name="总数量")),
                ("processed", models.IntegerField(default=0, verbose_name="已处理数量")),
                ("success", models.IntegerField(default=0, verbose_name="成功数量")),
                ("failed", models.IntegerField(default=0, verbose_name="失败数量")),
                ("error_message", models.TextField(blank=True, null=True, verbose_name="错误信息")),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now, verbose_name="创建时间")),
                ("started_at", models.DateTimeField(blank=True, null=True, verbose_name="开始时间")),
                ("completed_at", models.DateTimeField(blank=True, null=True, verbose_name="完成时间")),
                (
                    "config",
                    models.JSONField(
                        default=dict, help_text="包含news_ids和analysis_types等配置", verbose_name="配置信息"
                    ),
                ),
            ],
            options={
                "verbose_name": "批量分析任务",
                "verbose_name_plural": "批量分析任务",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Notification",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "notification_type",
                    models.CharField(
                        choices=[
                            ("analysis_complete", "分析完成"),
                            ("rule_created", "规则创建"),
                            ("task_complete", "任务完成"),
                            ("system", "系统通知"),
                        ],
                        max_length=50,
                        verbose_name="通知类型",
                    ),
                ),
                ("title", models.CharField(max_length=200, verbose_name="通知标题")),
                ("content", models.TextField(verbose_name="通知内容")),
                ("is_read", models.BooleanField(default=False, verbose_name="是否已读")),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now, verbose_name="创建时间")),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="更新时间")),
                ("related_object_id", models.IntegerField(blank=True, null=True, verbose_name="相关对象ID")),
                (
                    "related_object_type",
                    models.CharField(blank=True, max_length=100, null=True, verbose_name="相关对象类型"),
                ),
            ],
            options={
                "verbose_name": "通知",
                "verbose_name_plural": "通知",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="NotificationSubscription",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("email_enabled", models.BooleanField(default=True, verbose_name="启用邮件通知")),
                ("websocket_enabled", models.BooleanField(default=True, verbose_name="启用WebSocket通知")),
                ("notify_on_complete", models.BooleanField(default=True, verbose_name="分析完成时通知")),
                ("notify_on_error", models.BooleanField(default=True, verbose_name="分析错误时通知")),
                ("notify_on_batch", models.BooleanField(default=True, verbose_name="批量分析完成时通知")),
                ("notify_on_schedule", models.BooleanField(default=True, verbose_name="调度执行完成时通知")),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="创建时间")),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="更新时间")),
            ],
            options={
                "verbose_name": "通知订阅",
                "verbose_name_plural": "通知订阅",
            },
        ),
        migrations.CreateModel(
            name="ScheduleExecution",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "status",
                    models.CharField(
                        choices=[("success", "成功"), ("failed", "失败")], max_length=20, verbose_name="执行状态"
                    ),
                ),
                ("started_at", models.DateTimeField(auto_now_add=True, verbose_name="开始时间")),
                ("completed_at", models.DateTimeField(null=True, verbose_name="完成时间")),
                ("total_articles", models.IntegerField(default=0, verbose_name="总文章数")),
                ("processed_articles", models.IntegerField(default=0, verbose_name="已处理文章数")),
                ("success_articles", models.IntegerField(default=0, verbose_name="成功处理文章数")),
                ("error_message", models.TextField(blank=True, verbose_name="错误信息")),
            ],
            options={
                "verbose_name": "调度执行记录",
                "verbose_name_plural": "调度执行记录",
                "ordering": ["-started_at"],
            },
        ),
        migrations.CreateModel(
            name="AnalysisCache",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("cache_key", models.CharField(max_length=255, unique=True, verbose_name="缓存键")),
                ("result", models.JSONField(verbose_name="缓存结果")),
                ("expires_at", models.DateTimeField(verbose_name="过期时间")),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now, verbose_name="创建时间")),
            ],
            options={
                "verbose_name": "分析缓存",
                "verbose_name_plural": "分析缓存",
                "indexes": [
                    models.Index(fields=["cache_key"], name="ai_service__cache_k_91e588_idx"),
                    models.Index(fields=["expires_at"], name="ai_service__expires_88076e_idx"),
                ],
            },
        ),
    ]
