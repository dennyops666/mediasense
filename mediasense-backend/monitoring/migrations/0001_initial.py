# Generated by Django 5.1.5 on 2025-01-30 04:52

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="MonitoringVisualization",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=100, verbose_name="图表名称")),
                ("description", models.TextField(blank=True, verbose_name="图表描述")),
                (
                    "visualization_type",
                    models.CharField(
                        choices=[("line_chart", "折线图"), ("gauge", "仪表盘")],
                        max_length=20,
                        verbose_name="可视化类型",
                    ),
                ),
                (
                    "metric_type",
                    models.CharField(
                        choices=[
                            ("cpu_usage", "CPU使用率"),
                            ("memory_usage", "内存使用率"),
                            ("disk_usage", "磁盘使用率"),
                            ("network_in", "网络入流量"),
                            ("network_out", "网络出流量"),
                        ],
                        max_length=20,
                        verbose_name="指标类型",
                    ),
                ),
                ("config", models.JSONField(default=dict, verbose_name="配置信息")),
                ("is_active", models.BooleanField(default=True, verbose_name="是否启用")),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="创建时间")),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="更新时间")),
                ("cached_data", models.JSONField(blank=True, null=True, verbose_name="缓存数据")),
            ],
            options={
                "verbose_name": "监控可视化",
                "verbose_name_plural": "监控可视化",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="AlertNotificationConfig",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=100, verbose_name="通知名称")),
                (
                    "notification_type",
                    models.CharField(
                        choices=[
                            ("email", "邮件通知"),
                            ("sms", "短信通知"),
                            ("webhook", "Webhook通知"),
                            ("dingtalk", "钉钉通知"),
                            ("wechat", "微信通知"),
                        ],
                        max_length=20,
                        verbose_name="通知类型",
                    ),
                ),
                ("config", models.JSONField(help_text="通知相关的配置信息", verbose_name="通知配置")),
                ("alert_levels", models.JSONField(help_text="接收哪些级别的告警", verbose_name="告警级别")),
                ("is_active", models.BooleanField(default=True, verbose_name="是否启用")),
                (
                    "notification_interval",
                    models.IntegerField(
                        default=300, help_text="两次通知之间的最小间隔时间", verbose_name="通知间隔(秒)"
                    ),
                ),
                (
                    "recovery_notify",
                    models.BooleanField(default=True, help_text="告警恢复时是否发送通知", verbose_name="恢复通知"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="创建时间")),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="更新时间")),
                ("last_notified", models.DateTimeField(blank=True, null=True, verbose_name="上次通知时间")),
                ("notification_count", models.IntegerField(default=0, verbose_name="通知次数")),
                (
                    "user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="alert_notifications",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="用户",
                    ),
                ),
            ],
            options={
                "verbose_name": "告警通知配置",
                "verbose_name_plural": "告警通知配置",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="AlertRule",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=100, verbose_name="规则名称")),
                ("description", models.TextField(blank=True, verbose_name="规则描述")),
                (
                    "metric_type",
                    models.CharField(
                        choices=[
                            ("cpu_usage", "CPU使用率"),
                            ("memory_usage", "内存使用率"),
                            ("disk_usage", "磁盘使用率"),
                            ("network_in", "网络入流量"),
                            ("network_out", "网络出流量"),
                        ],
                        max_length=20,
                        verbose_name="监控指标",
                    ),
                ),
                (
                    "operator",
                    models.CharField(
                        choices=[("gt", "大于"), ("lt", "小于")], max_length=10, verbose_name="比较运算符"
                    ),
                ),
                ("threshold", models.FloatField(verbose_name="阈值")),
                ("duration", models.IntegerField(default=60, verbose_name="持续时间(秒)")),
                (
                    "alert_level",
                    models.CharField(
                        choices=[("info", "信息"), ("warning", "警告"), ("critical", "严重")],
                        default="warning",
                        max_length=20,
                        verbose_name="告警级别",
                    ),
                ),
                ("is_enabled", models.BooleanField(default=True, verbose_name="是否启用")),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="创建时间")),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="更新时间")),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="alert_rules",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="创建者",
                    ),
                ),
            ],
            options={
                "verbose_name": "告警规则",
                "verbose_name_plural": "告警规则",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Dashboard",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=100, verbose_name="仪表盘名称")),
                ("description", models.TextField(blank=True, verbose_name="仪表盘描述")),
                (
                    "layout_type",
                    models.CharField(
                        choices=[("grid", "网格布局"), ("flex", "弹性布局"), ("fixed", "固定布局")],
                        default="grid",
                        max_length=20,
                        verbose_name="布局类型",
                    ),
                ),
                ("layout", models.JSONField(default=dict, verbose_name="布局配置")),
                ("is_default", models.BooleanField(default=False, verbose_name="是否默认")),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="创建时间")),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="更新时间")),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="dashboards",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="创建者",
                    ),
                ),
            ],
            options={
                "verbose_name": "仪表盘",
                "verbose_name_plural": "仪表盘",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ErrorLog",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("error_type", models.CharField(max_length=100, verbose_name="错误类型")),
                ("error_message", models.TextField(verbose_name="错误信息")),
                ("stack_trace", models.TextField(blank=True, null=True, verbose_name="堆栈跟踪")),
                (
                    "severity",
                    models.CharField(
                        choices=[("info", "信息"), ("warning", "警告"), ("error", "错误"), ("critical", "严重")],
                        default="error",
                        max_length=10,
                        verbose_name="严重程度",
                    ),
                ),
                ("source", models.CharField(max_length=100, verbose_name="错误来源")),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="创建时间")),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="更新时间")),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="error_logs",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="创建者",
                    ),
                ),
            ],
            options={
                "verbose_name": "错误日志",
                "verbose_name_plural": "错误日志",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="DashboardWidget",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=100, verbose_name="小部件名称")),
                (
                    "widget_type",
                    models.CharField(
                        choices=[("chart", "图表"), ("metric", "指标"), ("text", "文本"), ("alert", "告警")],
                        default="chart",
                        max_length=20,
                        verbose_name="小部件类型",
                    ),
                ),
                ("config", models.JSONField(default=dict, verbose_name="配置信息")),
                ("position", models.JSONField(default=dict, verbose_name="位置信息")),
                ("is_visible", models.BooleanField(default=True, verbose_name="是否可见")),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="创建时间")),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="更新时间")),
                (
                    "dashboard",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="widgets",
                        to="monitoring.dashboard",
                        verbose_name="所属仪表盘",
                    ),
                ),
                (
                    "visualization",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="widgets",
                        to="monitoring.monitoringvisualization",
                        verbose_name="可视化配置",
                    ),
                ),
            ],
            options={
                "verbose_name": "仪表盘小部件",
                "verbose_name_plural": "仪表盘小部件",
                "ordering": ["dashboard", "created_at"],
            },
        ),
        migrations.CreateModel(
            name="SystemMetrics",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "metric_type",
                    models.CharField(
                        choices=[
                            ("cpu_usage", "CPU使用率"),
                            ("memory_usage", "内存使用率"),
                            ("disk_usage", "磁盘使用率"),
                            ("network_in", "网络入流量"),
                            ("network_out", "网络出流量"),
                        ],
                        max_length=20,
                        verbose_name="指标类型",
                    ),
                ),
                ("value", models.FloatField(verbose_name="指标值")),
                ("timestamp", models.DateTimeField(auto_now_add=True, verbose_name="记录时间")),
                ("metadata", models.JSONField(blank=True, default=dict, verbose_name="元数据")),
            ],
            options={
                "verbose_name": "系统指标",
                "verbose_name_plural": "系统指标",
                "ordering": ["-timestamp"],
                "indexes": [models.Index(fields=["metric_type", "timestamp"], name="monitoring__metric__641d8a_idx")],
            },
        ),
        migrations.CreateModel(
            name="AlertHistory",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "status",
                    models.CharField(
                        choices=[("active", "活动"), ("resolved", "已解决"), ("acknowledged", "已确认")],
                        default="active",
                        max_length=20,
                        verbose_name="状态",
                    ),
                ),
                ("message", models.TextField(blank=True, verbose_name="告警消息")),
                ("metric_value", models.FloatField(verbose_name="指标值")),
                ("triggered_at", models.DateTimeField(auto_now_add=True, verbose_name="触发时间")),
                ("resolved_at", models.DateTimeField(blank=True, null=True, verbose_name="解决时间")),
                ("acknowledged_at", models.DateTimeField(blank=True, null=True, verbose_name="确认时间")),
                ("note", models.TextField(blank=True, verbose_name="备注")),
                (
                    "acknowledged_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="acknowledged_alerts",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="确认者",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_alerts",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="创建者",
                    ),
                ),
                (
                    "rule",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="alert_history",
                        to="monitoring.alertrule",
                        verbose_name="告警规则",
                    ),
                ),
            ],
            options={
                "verbose_name": "告警历史",
                "verbose_name_plural": "告警历史",
                "ordering": ["-triggered_at"],
                "indexes": [
                    models.Index(fields=["rule", "status"], name="monitoring__rule_id_0ac316_idx"),
                    models.Index(fields=["triggered_at"], name="monitoring__trigger_ba7964_idx"),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="dashboard",
            index=models.Index(fields=["created_by", "is_default"], name="monitoring__created_578ec7_idx"),
        ),
        migrations.AddIndex(
            model_name="dashboard",
            index=models.Index(fields=["created_at"], name="monitoring__created_81e130_idx"),
        ),
        migrations.AddIndex(
            model_name="errorlog",
            index=models.Index(fields=["-created_at"], name="error_log_created_at_idx"),
        ),
        migrations.AddIndex(
            model_name="errorlog",
            index=models.Index(fields=["severity", "-created_at"], name="error_log_severity_idx"),
        ),
        migrations.AddIndex(
            model_name="dashboardwidget",
            index=models.Index(fields=["dashboard", "is_visible"], name="monitoring__dashboa_c4a3b4_idx"),
        ),
        migrations.AddIndex(
            model_name="dashboardwidget",
            index=models.Index(fields=["created_at"], name="monitoring__created_c1b3a0_idx"),
        ),
    ]
