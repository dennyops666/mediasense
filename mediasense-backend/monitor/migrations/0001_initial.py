# Generated by Django 4.2.9 on 2025-01-27 10:33

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="SystemMetric",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("metric_name", models.CharField(max_length=50, verbose_name="指标名称")),
                ("value", models.FloatField(verbose_name="指标值")),
                ("unit", models.CharField(max_length=20, verbose_name="单位")),
                ("timestamp", models.DateTimeField(auto_now_add=True, verbose_name="时间戳")),
                ("metadata", models.JSONField(blank=True, default=dict, verbose_name="元数据")),
            ],
            options={
                "verbose_name": "系统指标",
                "verbose_name_plural": "系统指标",
                "ordering": ["-timestamp"],
                "indexes": [
                    models.Index(fields=["metric_name", "-timestamp"], name="monitor_sys_metric__bb7bf1_idx"),
                    models.Index(fields=["-timestamp"], name="monitor_sys_timesta_3c0769_idx"),
                ],
            },
        ),
        migrations.CreateModel(
            name="MonitorRule",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=100, verbose_name="规则名称")),
                ("metric", models.CharField(max_length=50, verbose_name="监控指标")),
                (
                    "condition",
                    models.CharField(
                        choices=[
                            ("gt", "大于"),
                            ("lt", "小于"),
                            ("eq", "等于"),
                            ("ne", "不等于"),
                            ("ge", "大于等于"),
                            ("le", "小于等于"),
                        ],
                        max_length=2,
                        verbose_name="条件",
                    ),
                ),
                ("threshold", models.FloatField(verbose_name="阈值")),
                ("duration", models.IntegerField(verbose_name="持续时间(秒)")),
                ("description", models.TextField(blank=True, verbose_name="描述")),
                ("is_active", models.BooleanField(default=True, verbose_name="是否启用")),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="创建时间")),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="更新时间")),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="monitor_rules",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="创建者",
                    ),
                ),
            ],
            options={
                "verbose_name": "监控规则",
                "verbose_name_plural": "监控规则",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="MonitorAlert",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("metric_value", models.FloatField(verbose_name="指标值")),
                (
                    "status",
                    models.CharField(
                        choices=[("active", "活动"), ("resolved", "已解决"), ("ignored", "已忽略")],
                        default="active",
                        max_length=10,
                        verbose_name="状态",
                    ),
                ),
                ("message", models.TextField(verbose_name="告警消息")),
                ("resolved_at", models.DateTimeField(blank=True, null=True, verbose_name="解决时间")),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="创建时间")),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="更新时间")),
                (
                    "resolved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="resolved_alerts",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="解决者",
                    ),
                ),
                (
                    "rule",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="alerts",
                        to="monitor.monitorrule",
                        verbose_name="告警规则",
                    ),
                ),
            ],
            options={
                "verbose_name": "监控告警",
                "verbose_name_plural": "监控告警",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ErrorLog",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("timestamp", models.DateTimeField(auto_now_add=True, verbose_name="时间戳")),
                (
                    "level",
                    models.CharField(
                        choices=[
                            ("DEBUG", "调试"),
                            ("INFO", "信息"),
                            ("WARNING", "警告"),
                            ("ERROR", "错误"),
                            ("CRITICAL", "严重"),
                        ],
                        max_length=10,
                        verbose_name="日志级别",
                    ),
                ),
                ("service", models.CharField(max_length=50, verbose_name="服务名称")),
                ("message", models.TextField(verbose_name="错误消息")),
                ("traceback", models.TextField(blank=True, verbose_name="错误堆栈")),
                ("metadata", models.JSONField(blank=True, default=dict, verbose_name="元数据")),
            ],
            options={
                "verbose_name": "错误日志",
                "verbose_name_plural": "错误日志",
                "ordering": ["-timestamp"],
                "indexes": [
                    models.Index(fields=["-timestamp"], name="monitor_err_timesta_1935d0_idx"),
                    models.Index(fields=["level", "-timestamp"], name="monitor_err_level_8c11de_idx"),
                    models.Index(fields=["service", "-timestamp"], name="monitor_err_service_3b5acb_idx"),
                ],
            },
        ),
    ]
